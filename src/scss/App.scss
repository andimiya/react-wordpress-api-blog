@charset "utf-8";

// Define defaults for each variable.

$base-font-family: "futura-pt", "Helvetica Neue", Helvetica, Arial,
  "Lucida Grande", sans-serif;
$base-font-size: 16px !default;
$base-font-weight: 400 !default;
$small-font-size: $base-font-size * 0.875 !default;
$base-line-height: 1.5 !default;

$spacing-unit: 30px !default;

$text-color: #111 !default;
$background-color: #fdfdfd !default;
$brand-color: #2a7ae2 !default;

$grey-color: #828282 !default;
$grey-color-light: lighten($grey-color, 40%) !default;
$grey-color-dark: darken($grey-color, 25%) !default;

// Width of the content area
$content-width: 800px !default;

$on-palm: 600px !default;
$on-laptop: 800px !default;

// Font Weights
$light-weight: 300;
$middle-weight: 400;
$heavy-weight: 600;

// Screen sizes
$screen-xlarge: 80em; // 1280px
$screen-large: 64em; // 1024px
$screen-medium: 48em; // 768px
$screen-small: 35.5em; // 568px

// Highlight
$highlight-width: calc(100% + 7px);
$highlight-transition: width 0.2s ease-out;

// colors
$white: #fff;
$black: #000;
$gray: #8c989d;
$blue: #0077ee;
$strokeGray: #b5bdc4;
$sudokrew-blue: $blue;

// typography colors
$text-color: #333;
$primary-color: #0077ee;

// Use media queries like this:
// @include media-query($on-palm) {
//   .wrapper {
//     padding-right: $spacing-unit / 2;
//     padding-left: $spacing-unit / 2;
//   }
// }
@mixin media-query($device) {
  @media screen and (max-width: $device) {
    @content;
  }
}

@mixin relative-font-size($ratio) {
  font-size: $base-font-size * $ratio;
}

// Media Queries
// --------------------------------
@mixin between-breakpoints($min, $max) {
  @media (min-width: $min) and (max-width: $max) {
    @content;
  }
}

@mixin min-breakpoint($point) {
  @if $point == xxlarge {
    @media (min-width: 100em) {
      /* min-width 1600px */
      @content;
    }
  } @else if $point == xlarge {
    @media (min-width: 80em) {
      /* min-width 1280px */
      @content;
    }
  } @else if $point == large {
    @media (min-width: 64em) {
      /* min-width 1024px */
      @content;
    }
  } @else if $point == medium {
    @media (min-width: 48em) {
      /* min-width 768px */
      @content;
    }
  } @else if $point == small {
    @media (min-width: 35.5em) {
      /* min-width 568px */
      @content;
    }
  }
}

@mixin max-breakpoint($point) {
  @if $point == xxlarge {
    @media (max-width: 100em) {
      /* max-width 1600px */
      @content;
    }
  } @else if $point == xlarge {
    @media (max-width: 80em) {
      /* max-width 1280px */
      @content;
    }
  } @else if $point == large {
    @media (max-width: 64em) {
      /* max-width 1024px */
      @content;
    }
  } @else if $point == medium {
    @media (max-width: 48em) {
      /* max-width 768px */
      @content;
    }
  } @else if $point == small {
    @media (max-width: 35.5em) {
      /* max-width 568px */
      @content;
    }
  }
}

// Set a rem font size with pixel fallback
@mixin font-size($size) {
  font-size: $size;
  font-size: rem($size);
}

// Calculate rem from pixel
@function rem($size) {
  $rem-size: $size / 16px;
  @return $rem-size * 1rem;
}

// Import partials
// Import partials.
@import "base", "layout", "syntax-highlighting", "animations";
